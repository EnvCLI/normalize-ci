# workflow
name: Release

# trigger
on:
  push:
    tags:        
      - v*

# jobs
jobs:
  # stages
  build:
    # runtime environment
    runs-on: ubuntu-latest

    # jobs
    steps:
    # checkout
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    # prepare environment
    - name: Environment Setup
      run: |
        curl https://raw.githubusercontent.com/EnvCLI/modular-pipeline/master/install.sh | sudo bash
        export PROJECT_TYPE=golang-cli
        export DEPLOYMENT_TYPE=bintray
    # pipeline steps
    - name: Prepare
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-prepare
    - name: Build
      env:
        PROJECT_TYPE: golang-cli
        UPX_ENABLE: "true"
        UPX_ARGS: --brute
      run: |
        stage-build
    - name: Test
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-test
    - name: Package
      env:
        PROJECT_TYPE: golang-cli
        BINTRAY_ORGANZATION: envcli
        BINTRAY_REPOSITORY: golang
        BINTRAY_PACKAGE: normalize-ci
        BINTRAY_USERNAME: philippheuer
        BINTRAY_TOKEN: ${{ secrets.BINTRAY_TOKEN }}
      run: |
        stage-package
    - name: Audit
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-audit
    - name: Deploy
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-deploy production
    - name: Performance
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-performance
    - name: CleanUp
      env:
        PROJECT_TYPE: golang-cli
      run: |
        stage-cleanup
